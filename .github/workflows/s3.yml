# name: s3
# on:
#   push:
#     branches:
#     -  main
# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v1

#     - name: AWS
#       uses: aws-actions/configure-aws-credentials@v1
#       with: 
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ secrets.AWS_S3_REGION }}

#     - name: s3 deploy
#       run: aws s3 sync . s3://nisheshs/ --size-only

#     - name: Notify SNS
#       run: |
#         aws sns publish \
#           --topic-arn arn:aws:sns:us-east-1:806395723933:notificationtopic \
#           --message "Deployment to S3 completed. Files have been uploaded to s3://nisheshs/."
name: S3 Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Sync Files to S3
      id: sync
      run: |
        # Sync files to S3 bucket
        aws s3 sync . s3://nisheshs/ --delete --exclude ".*"

    - name: List Uploaded Files
      id: list
      run: |
        # List files in the S3 bucket, excluding hidden files
        aws s3api list-objects-v2 --bucket nisheshs --query "Contents[].Key" --output text | grep -v '^\.git/' | grep -v '^\.github/' > s3-files-list.txt

        # Check if files list is empty
        if [ -s s3-files-list.txt ]; then
          echo "Deployment succeeded.\n\nFiles uploaded to s3 bucket:\n$(cat s3-files-list.txt)" > message.txt
        else
          echo "Deployment succeeded but no files were uploaded to the S3 bucket." > message.txt
        fi

    - name: Notify SNS
      if: always() # Always run this step regardless of previous steps' outcome
      run: |
        aws sns publish \
          --topic-arn arn:aws:sns:us-east-1:806395723933:notificationtopic \
          --message file://message.txt \
          --subject "Deployment Notification"

    - name: Send Failure Notification
      if: failure() # Run this step only if the job fails
      run: |
        aws sns publish \
          --topic-arn arn:aws:sns:us-east-1:806395723933:notificationtopic \
          --message "Deployment failed. Please check the logs for details." \
          --subject "Deployment Failure Notification"
